{
  "swagger": "2.0",
  "info": {
    "title": "Snippets API",
    "description": "Test description",
    "termsOfService": "https://www.google.com/policies/terms/",
    "contact": {
      "email": "contact@snippets.local"
    },
    "license": {
      "name": "BSD License"
    },
    "version": "v1"
  },
  "host": "127.0.0.1:8000",
  "schemes": [
    "http"
  ],
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Basic": {
      "type": "basic"
    },
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Basic": []
    },
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/accounts/signup/": {
      "post": {
        "operationId": "accounts_signup_create",
        "description": "Takes a complete set of user information to create and save a new user",
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "type": "string",
            "description": "Unique username to identify user",
            "required": true
          },
          {
            "in": "query",
            "name": "password",
            "type": "string",
            "description": "User password",
            "required": true
          },
          {
            "in": "query",
            "name": "password2",
            "type": "string",
            "description": "Repeated user password for verification",
            "required": true
          },
          {
            "in": "query",
            "name": "first_name",
            "type": "string",
            "description": "User first name"
          },
          {
            "in": "query",
            "name": "last_name",
            "type": "string",
            "description": "User last name"
          },
          {
            "in": "query",
            "name": "email",
            "type": "string",
            "format": "email",
            "description": "User email address"
          },
          {
            "in": "query",
            "name": "phone_number",
            "type": "string",
            "description": "User phone number"
          },
          {
            "in": "query",
            "name": "avatar",
            "type": "image",
            "description": "User avatar"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Signup"
            }
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "parameters": []
    },
    "/accounts/login/": {
      "post": {
        "operationId": "accounts_login_create",
        "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "type": "string",
            "description": "Unique username to identify user",
            "required": true
          },
          {
            "in": "query",
            "name": "password",
            "type": "string",
            "description": "User password",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenObtainPair"
            }
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "parameters": []
    },
    "/accounts/me/edit/": {
      "get": {
        "operationId": "accounts_me_edit_read",
        "description": "Get all profile information for a current user so that a user can then edit their provided information.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "put": {
        "operationId": "accounts_me_edit_update",
        "description": "Put a complete set of user profile information and save all editied fields.",
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "type": "string",
            "description": "Unique username to identify user",
            "required": true
          },
          {
            "in": "query",
            "name": "first_name",
            "type": "string",
            "description": "User first name",
            "required": true
          },
          {
            "in": "query",
            "name": "last_name",
            "type": "string",
            "description": "User last name",
            "required": true
          },
          {
            "in": "query",
            "name": "email",
            "type": "string",
            "format": "email",
            "description": "User email address",
            "required": true
          },
          {
            "in": "query",
            "name": "phone_number",
            "type": "string",
            "description": "User phone number",
            "required": true
          },
          {
            "in": "query",
            "name": "avatar",
            "type": "image",
            "description": "User avatar",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "patch": {
        "operationId": "accounts_me_edit_partial_update",
        "description": "Put a partial set of user profile information and save all editied fields.",
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "type": "string",
            "description": "Unique username to identify user"
          },
          {
            "in": "query",
            "name": "first_name",
            "type": "string",
            "description": "User first name"
          },
          {
            "in": "query",
            "name": "last_name",
            "type": "string",
            "description": "User last name"
          },
          {
            "in": "query",
            "name": "email",
            "type": "string",
            "format": "email",
            "description": "User email address"
          },
          {
            "in": "query",
            "name": "phone_number",
            "type": "string",
            "description": "User phone number"
          },
          {
            "in": "query",
            "name": "avatar",
            "type": "image",
            "description": "User avatar"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "parameters": []
    },
    "/accounts/me/classes/": {
      "get": {
        "operationId": "accounts_me_classes_list",
        "description": "Get a complete list of all classes that the user is currently enrolled in.",
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "required": true,
            "type": "integer",
            "description": "the year to start querying from"
          },
          {
            "in": "query",
            "name": "month",
            "required": true,
            "type": "integer",
            "description": "the month to start querying from"
          },
          {
            "in": "query",
            "name": "day",
            "required": true,
            "type": "integer",
            "description": "the day/week to start quering from"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "MONDAY": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                },
                "TUESDAY": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                },
                "WEDNESDAY": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                },
                "THURSDAY": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                },
                "FRIDAY": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                },
                "SATURDAY": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                },
                "SUNDAY": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "parameters": []
    },
    "/accounts/me/add-card/": {
      "post": {
        "operationId": "accounts_me_add-card_create",
        "description": "Create a new card for a user. Each user can have at most 1 card.",
        "parameters": [
          {
            "in": "query",
            "name": "card_num",
            "type": "string",
            "description": "Number for the card being added",
            "required": true
          },
          {
            "in": "query",
            "name": "expiration_date",
            "type": "string",
            "format": "date",
            "description": "Expiration date for the card being added",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Card"
            }
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "parameters": []
    },
    "/accounts/me/update-card/": {
      "get": {
        "operationId": "accounts_me_update-card_read",
        "description": "Edit user card information if they have an existing card on their profile.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Card"
            }
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "put": {
        "operationId": "accounts_me_update-card_update",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "card_num",
            "type": "string",
            "description": "Updated card number",
            "required": true
          },
          {
            "in": "query",
            "name": "expiration_date",
            "type": "string",
            "format": "date",
            "description": "Updated card number expiration date",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Card"
            }
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "patch": {
        "operationId": "accounts_me_update-card_partial_update",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "card_num",
            "type": "string",
            "description": "Updated card number"
          },
          {
            "in": "query",
            "name": "expiration_date",
            "type": "string",
            "format": "date",
            "description": "Updated card number expiration date"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Card"
            }
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "parameters": []
    },
    "/classes/drop/": {
      "post": {
        "operationId": "classes_drop_create",
        "description": "",
        "parameters": [
          {
            "name": "class_id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "classes"
        ]
      },
      "parameters": []
    },
    "/classes/enrol/": {
      "post": {
        "operationId": "classes_enrol_create",
        "description": "",
        "parameters": [
          {
            "name": "class_id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "classes"
        ]
      },
      "parameters": []
    },
    "/studios/": {
      "get": {
        "operationId": "studios_list",
        "description": "Get a list of studios filtered by name, coach names, class names, and amenities",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "description": "The numbers of items to return"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "description": "The numbers of items to skip"
          },
          {
            "in": "query",
            "name": "studio_name",
            "type": "string",
            "description": "The name of the studio"
          },
          {
            "in": "query",
            "name": "class_names",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The array of class names that the studios must include at least one of"
          },
          {
            "in": "query",
            "name": "amenities",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The array of amenity names that the studios must include at least one of"
          },
          {
            "in": "query",
            "name": "coach_names",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The array of usernames (coaches)that the studios must include at least one of"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "studios"
        ]
      },
      "parameters": []
    },
    "/studios/all/": {
      "get": {
        "operationId": "studios_all_list",
        "description": "Get all studios sorted by proximity to the given location",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Location to sort distance from in the form lat,lng (eg. ?from=12,-34.21)",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "studios"
        ]
      },
      "parameters": []
    },
    "/studios/{studio_id}/": {
      "get": {
        "operationId": "studios_read",
        "description": "Get the studio with the given id",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Studio"
            }
          }
        },
        "tags": [
          "studios"
        ]
      },
      "parameters": [
        {
          "name": "studio_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/studios/{studio_id}/classes/": {
      "get": {
        "operationId": "studios_classes_list",
        "description": "Get a filtered list of classes from the studio with the given id",
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "type": "string",
            "description": "The year to start getting classes from"
          },
          {
            "in": "query",
            "name": "month",
            "type": "string",
            "description": "The month to start getting classes from"
          },
          {
            "in": "query",
            "name": "day",
            "type": "string",
            "description": "The day to start getting classes"
          },
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "description": "The name of the class"
          },
          {
            "in": "query",
            "name": "coach_name",
            "type": "string",
            "description": "The coach name"
          },
          {
            "in": "query",
            "name": "start_time",
            "type": "string"
          },
          {
            "in": "query",
            "name": "end_time",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Class"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "studios"
        ]
      },
      "parameters": [
        {
          "name": "studio_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/studios/{studio_id}/classes/all/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "required": true,
            "type": "string",
            "description": "The year to start getting classes from"
          },
          {
            "in": "query",
            "name": "month",
            "required": true,
            "type": "string",
            "description": "The month to start getting classes from"
          },
          {
            "in": "query",
            "name": "day",
            "required": true,
            "type": "string",
            "description": "The day to start getting classes from"
          }
        ],
        "operationId": "studios_classes_all_list",
        "description": "",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "MONDAY": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                },
                "TUESDAY": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                },
                "WEDNESDAY": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                },
                "THURSDAY": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                },
                "FRIDAY": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                },
                "SATURDAY": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                },
                "SUNDAY": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Studio"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "studios"
        ]
      },
      "parameters": [
        {
          "name": "studio_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/subscriptions/me/next-payment/": {
      "get": {
        "operationId": "subscriptions_me_next-payment_list",
        "description": "Get the next future payment of the user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "subscriptions"
        ]
      },
      "parameters": []
    },
    "/subscriptions/me/payment-history/": {
      "get": {
        "operationId": "subscriptions_me_payment-history_list",
        "description": "Get the past payments of the user",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "subscriptions"
        ]
      },
      "parameters": []
    },
    "/subscriptions/subscribe/": {
      "post": {
        "operationId": "subscriptions_subscribe_create",
        "description": "Subscribe user to their selected subscription.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "subscriptions"
        ]
      },
      "parameters": [
        {
          "name": "data",
          "in": "body",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "subscription_id": {
                "type": "integer"
              }
            }
          }
        }
      ]
    },
    "/subscriptions/unsubscribe/": {
      "post": {
        "operationId": "subscriptions_unsubscribe_create",
        "description": "Remove the user from their current subscription.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "subscriptions"
        ]
      },
      "parameters": []
    }
  },
  "definitions": {
    "TokenObtainPair": {
      "required": [
        "username",
        "password"
      ],
      "type": "object",
      "properties": {
        "username": {
          "title": "Username",
          "type": "string",
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Card": {
      "required": [
        "card_num",
        "expiration_date"
      ],
      "type": "object",
      "properties": {
        "card_num": {
          "title": "Card num",
          "type": "string",
          "maxLength": 16,
          "minLength": 1
        },
        "expiration_date": {
          "title": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "User": {
      "required": [
        "username"
      ],
      "type": "object",
      "properties": {
        "username": {
          "title": "Username",
          "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
          "type": "string",
          "pattern": "^[\\w.@+-]+$",
          "maxLength": 150,
          "minLength": 1
        },
        "first_name": {
          "title": "First name",
          "type": "string",
          "maxLength": 150
        },
        "last_name": {
          "title": "Last name",
          "type": "string",
          "maxLength": 150
        },
        "email": {
          "title": "Email address",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "phone_number": {
          "title": "Phone number",
          "type": "string",
          "maxLength": 12,
          "x-nullable": true
        },
        "avatar": {
          "title": "Avatar",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        }
      }
    },
    "Signup": {
      "required": [
        "username",
        "password",
        "password2"
      ],
      "type": "object",
      "properties": {
        "username": {
          "title": "Username",
          "type": "string",
          "pattern": "^[\\w]+$",
          "maxLength": 150,
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        },
        "password2": {
          "title": "Password2",
          "type": "string",
          "minLength": 1
        },
        "first_name": {
          "title": "First name",
          "type": "string",
          "maxLength": 150
        },
        "last_name": {
          "title": "Last name",
          "type": "string",
          "maxLength": 150
        },
        "email": {
          "title": "Email address",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "phone_number": {
          "title": "Phone number",
          "type": "string",
          "maxLength": 12,
          "x-nullable": true
        },
        "avatar": {
          "title": "Avatar",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        }
      }
    },
    "Image": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 200,
          "minLength": 1
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "maxLength": 200,
          "x-nullable": true
        }
      }
    },
    "Amenity": {
      "required": [
        "name",
        "quantity"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 200,
          "minLength": 1
        },
        "quantity": {
          "title": "Quantity",
          "type": "integer"
        }
      }
    },
    "Account": {
      "required": [
        "username"
      ],
      "type": "object",
      "properties": {
        "username": {
          "title": "Username",
          "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
          "type": "string",
          "pattern": "^[\\w.@+-]+$",
          "maxLength": 150,
          "minLength": 1
        },
        "first_name": {
          "title": "First name",
          "type": "string",
          "maxLength": 150
        },
        "last_name": {
          "title": "Last name",
          "type": "string",
          "maxLength": 150
        },
        "email": {
          "title": "Email address",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "phone_number": {
          "title": "Phone number",
          "type": "string",
          "maxLength": 12,
          "x-nullable": true
        },
        "avatar": {
          "title": "Avatar",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "enrolled_classes": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "subscription": {
          "title": "Subscription",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "Keyword": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 200,
          "minLength": 1
        }
      }
    },
    "Class": {
      "required": [
        "name",
        "coach",
        "capacity",
        "keywords"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 200,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 500
        },
        "coach": {
          "$ref": "#/definitions/Account"
        },
        "capacity": {
          "title": "Capacity",
          "type": "integer"
        },
        "keywords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Keyword"
          }
        },
        "weekday": {
          "title": "Weekday",
          "type": "string",
          "enum": [
            "MONDAY",
            "TUESDAY",
            "THURSDAY",
            "WEDNESDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        },
        "start_time": {
          "title": "Start time",
          "type": "string"
        },
        "end_time": {
          "title": "End time",
          "type": "string"
        }
      }
    },
    "Studio": {
      "required": [
        "name",
        "address",
        "postal_code",
        "phone_num",
        "images",
        "amenities",
        "classes"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 200,
          "minLength": 1
        },
        "address": {
          "title": "Address",
          "type": "string",
          "maxLength": 200,
          "minLength": 1
        },
        "longitude": {
          "title": "Longitude",
          "type": "number"
        },
        "latitude": {
          "title": "Latitude",
          "type": "number"
        },
        "postal_code": {
          "title": "Postal code",
          "type": "string",
          "maxLength": 200,
          "minLength": 1
        },
        "phone_num": {
          "title": "Phone num",
          "type": "string",
          "pattern": "^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$",
          "maxLength": 20,
          "minLength": 1
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "amenities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Amenity"
          }
        },
        "classes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Class"
          }
        }
      }
    },
    "Transaction": {
      "required": [
        "amount",
        "payment_method"
      ],
      "type": "object",
      "properties": {
        "amount": {
          "title": "Amount",
          "type": "number"
        },
        "time": {
          "title": "Time",
          "type": "string",
          "format": "date-time"
        },
        "payment_method": {
          "$ref": "#/definitions/Card"
        }
      }
    },
    "Subscription": {
      "required": [
        "id",
        "price",
        "billing_interval"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "price": {
          "type": "number"
        },
        "billing_interval": {
          "type": "string"
        }
      }
    }
  }
}